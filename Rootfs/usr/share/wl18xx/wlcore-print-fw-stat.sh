# Automatically generated shell script
#  See http://www.assembla.com/code/OpenTI/git/nodes/master/global_types_gen.py
set -e
# Use first found phy* folder. See also http://www-rohan.sdsu.edu/doc/sed.html
# export DEV_MEM=`find /sys/kernel/debug/ieee80211/phy*/wlcore/mem  -name "*" -type f | sed  q -`
# Use last found phy* folder
export DEV_MEM=`find /sys/kernel/debug/ieee80211/phy*/wlcore/mem  -name "*" -type f | sed  '$!d' -`
case $1 in
stat)
# stat type=ACXStatisticsStruct, bytes=1100
    echo '    type=ACXStatisticsStruct, bytes=1092/1100'
    echo error
        echo '        type=ErrorStatistics_t, bytes=64'
            dd bs=4 count=1 skip=$((0x00100000/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            errorFrameNonCtrl %04x\n"'
            dd bs=4 count=1 skip=$((0x00100004/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            errorFrameCtrl %04x\n"'
            dd bs=4 count=1 skip=$((0x00100008/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            errorFrameDuringProtection %04x\n"'
            dd bs=4 count=1 skip=$((0x0010000c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            nullFrameTxStart %04x\n"'
            dd bs=4 count=1 skip=$((0x00100010/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numllFrameCtsStart %04x\n"'
            dd bs=4 count=1 skip=$((0x00100014/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            barRetry %04x\n"'
            dd bs=4 count=1 skip=$((0x00100018/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numlFrameCtsNulFlid %04x\n"'
            dd bs=4 count=1 skip=$((0x0010001c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            txAbortFailure %04x\n"'
            dd bs=4 count=1 skip=$((0x00100020/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            txResumeFailure %04x\n"'
            dd bs=4 count=1 skip=$((0x00100024/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            rxCmpltDbOverflowCount %04x\n"'
            dd bs=4 count=1 skip=$((0x00100028/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            goint_to_elp_while_rx_exch_in_progress %04x\n"'
            dd bs=4 count=1 skip=$((0x0010002c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            goint_to_elp_while_tx_exch_in_progress %04x\n"'
            dd bs=4 count=1 skip=$((0x00100030/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            goint_to_elp_while_tx_in_progress %04x\n"'
            dd bs=4 count=1 skip=$((0x00100034/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            going_to_elp_while_nvic_is_pending %04x\n"'
            dd bs=4 count=1 skip=$((0x00100038/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            rxExcessiveFrameLen %04x\n"'
            dd bs=4 count=1 skip=$((0x0010003c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            errorBurstModeMismatch %04x\n"'
            dd bs=4 count=1 skip=$((0x00100040/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            errorTbcHwExchMismatch %04x\n"'
    echo tx
        echo '        type=None, bytes=256'
            dd bs=4 count=1 skip=$((0x00100044/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfPreparedDescs %04x\n"'
            dd bs=4 count=1 skip=$((0x00100048/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxCmplt %04x\n"'
            dd bs=4 count=1 skip=$((0x0010004c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxTemplatePrepared %04x\n"'
            dd bs=4 count=1 skip=$((0x00100050/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxDataPrepared %04x\n"'
            dd bs=4 count=1 skip=$((0x00100054/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxTemplateProgrammed %04x\n"'
            dd bs=4 count=1 skip=$((0x00100058/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxDataProgrammed %04x\n"'
            dd bs=4 count=1 skip=$((0x0010005c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxBurstProgrammed %04x\n"'
            dd bs=4 count=1 skip=$((0x00100060/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStarts %04x\n"'
            dd bs=4 count=1 skip=$((0x00100064/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStop %04x\n"'		
            dd bs=4 count=1 skip=$((0x00100068/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStartTempaltes %04x\n"'
            dd bs=4 count=1 skip=$((0x0010006c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStartIntTemplate %04x\n"'
            dd bs=4 count=1 skip=$((0x00100070/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStartFwGen %04x\n"'
            dd bs=4 count=1 skip=$((0x00100074/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStartData %04x\n"'
            dd bs=4 count=1 skip=$((0x00100078/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStartNullFrame %04x\n"'
            dd bs=4 count=1 skip=$((0x0010007c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxExch %04x\n"'
            dd bs=4 count=1 skip=$((0x00100080/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxRetryTemplate %04x\n"'
            dd bs=4 count=1 skip=$((0x00100084/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxRetryData %04x\n"'            
        echo numOfTxRetryPerRate
			dd bs=4 count=1 skip=$((0x00100088/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"00: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x0010008c/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"01: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x00100090/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"02: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x00100094/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"03: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x00100098/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"04: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x0010009c/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"05: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000a0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"06: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000a4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"07: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000a8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"08: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000ac/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"09: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000b0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"10: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000b4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"11: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000b8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"12: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000bc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"13: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000c0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"14: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000c4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"15: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000c8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"16: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000cc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"17: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000d0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"18: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000d4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"19: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000d8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"20: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000dc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"21: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000e0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"22: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000e4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"23: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000e8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"24: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000ec/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"25: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000f0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"26: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000f4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"27: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000f8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"28: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001000fc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"29: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x00100100/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxExchPending %04x\n"'
            dd bs=4 count=1 skip=$((0x00100104/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxExchExpiry %04x\n"'
            dd bs=4 count=1 skip=$((0x00100108/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxDoneTemplate %04x\n"'
            dd bs=4 count=1 skip=$((0x0010010c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxDoneData %04x\n"'
            dd bs=4 count=1 skip=$((0x00100110/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxDoneIntTemplate %04x\n"'
			dd bs=4 count=1 skip=$((0x00100114/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxCFE_1 %04x\n"'
            dd bs=4 count=1 skip=$((0x00100118/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxCFE_2 %04x\n"'
            dd bs=4 count=1 skip=$((0x0010011c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100120/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragMpduAllocFailed %04x\n"'
            dd bs=4 count=1 skip=$((0x00100124/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragInitCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100128/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragInProcessCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x0010012c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragTkipCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100130/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragKeyNotFound %04x\n"'
            dd bs=4 count=1 skip=$((0x00100134/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragNeedFragmentation %04x\n"'
            dd bs=4 count=1 skip=$((0x00100138/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragBadMblkNum %04x\n"'
            dd bs=4 count=1 skip=$((0x0010013c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragFailed %04x\n"'
            dd bs=4 count=1 skip=$((0x00100140/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragCacheHit %04x\n"'
            dd bs=4 count=1 skip=$((0x00100144/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            fragCacheMiss %04x\n"'
    echo rx
        echo '        type=None, bytes=96'
            dd bs=4 count=1 skip=$((0x00100148/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxBeaconEarlyTerm %04x\n"'
            dd bs=4 count=1 skip=$((0x0010014c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxOutOfMpduNodes %04x\n"'
            dd bs=4 count=1 skip=$((0x00100150/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxHdrOverflow %04x\n"'
            dd bs=4 count=1 skip=$((0x00100154/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxDroppedFrame %04x\n"'
            dd bs=4 count=1 skip=$((0x00100158/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxDoneStage %04x\n"'
            dd bs=4 count=1 skip=$((0x0010015c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxDone %04x\n"'
            dd bs=4 count=1 skip=$((0x00100160/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxDefrag %04x\n"'
            dd bs=4 count=1 skip=$((0x00100164/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxDefragEnd %04x\n"'
            dd bs=4 count=1 skip=$((0x00100168/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxCmplt %04x\n"'
            dd bs=4 count=1 skip=$((0x0010016c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxPreCmplt %04x\n"'
            dd bs=4 count=1 skip=$((0x00100170/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxCmpltTask %04x\n"'
            dd bs=4 count=1 skip=$((0x00100174/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxPhyHdr %04x\n"'
            dd bs=4 count=1 skip=$((0x00100178/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxTimeout %04x\n"'
			dd bs=4 count=1 skip=$((0x0010017c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxRtsTimeout %04x\n"'
            dd bs=4 count=1 skip=$((0x00100180/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxTimeoutWA %04x\n"'
            dd bs=4 count=1 skip=$((0x00100184/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100188/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragInitCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x0010018c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragInProcessCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100190/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragTkipCalled %04x\n"'
            dd bs=4 count=1 skip=$((0x00100194/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragNeedDefrag %04x\n"'
            dd bs=4 count=1 skip=$((0x00100198/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragDecryptFailed %04x\n"'
            dd bs=4 count=1 skip=$((0x0010019c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            decryptKeyNotFound %04x\n"'
            dd bs=4 count=1 skip=$((0x001001a0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragNeedDecr %04x\n"'
            dd bs=4 count=1 skip=$((0x001001a4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            TKIPReplays %04x\n"'
            dd bs=4 count=1 skip=$((0x001001a8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxXfr %04x\n"'			
    echo isr
        echo '        type=None, bytes=4'
            dd bs=4 count=1 skip=$((0x001001ac/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            IRQs %04x\n"'
    echo pwr
        echo '        type=PwrStatistics_t, bytes=80'
            dd bs=4 count=1 skip=$((0x001001b0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            MissingBcnsCnt %04x\n"'
            dd bs=4 count=1 skip=$((0x001001b4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RcvdBeaconsCnt %04x\n"'
            dd bs=4 count=1 skip=$((0x001001b8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            ConnectionOutOfSync %04x\n"'
        echo ContMissBcnsSpread
            dd bs=4 count=1 skip=$((0x001001bc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"00: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001c0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"01: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001c4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"02: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001c8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"03: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001cc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"04: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001d0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"05: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001d4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"06: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001d8/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"07: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001dc/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"08: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001e0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 4 -e '"09: " 1/4 "%06d " "\n"' 
            dd bs=4 count=1 skip=$((0x001001e4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RcvdAwakeBeaconsCnt %04x\n"'		
			dd bs=4 count=1 skip=$((0x001001e8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            SleepTimeCnt %04x\n"'
            dd bs=4 count=1 skip=$((0x001001ec/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            SleepTimeAvg %04x\n"'
            dd bs=4 count=1 skip=$((0x001001f0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            SleepCycleAvg %04x\n"'
			dd bs=4 count=1 skip=$((0x001001f4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            SleepPrct %04x\n"'
            dd bs=4 count=1 skip=$((0x001001f8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            ApSleep_active_conf %04x\n"'
            dd bs=4 count=1 skip=$((0x001001fc/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            ApSleep_user_conf %04x\n"'
			dd bs=4 count=1 skip=$((0x00100200/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            ApSleep_cntr %04x\n"'

    echo rxFilter
        echo '        type=RxFilterStatistics_t, bytes=32'
            dd bs=4 count=1 skip=$((0x00100204/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            beaconFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x00100208/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            arpFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x0010020c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            MCFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x00100210/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            dupFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x00100214/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            dataFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x00100218/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            ibssFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x0010021c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            protectionFilter %04x\n"'
            dd bs=4 count=1 skip=$((0x00100220/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            accumArpPendRequests %04x\n"'
            dd bs=4 count=1 skip=$((0x00100224/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            maxArpQueueDep %04x\n"'
    echo rxRates
        echo '        type=RxRatesStatistics_t, bytes=200'
        echo rxFramesPerRates
            dd bs=4 count=50 skip=$((0x00100228/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 200 -e '8/4 "%08X " "\n"' 
    echo aggSize
        echo '        type=AggregationSizeStat_t, bytes=192'
        echo txAggRate
            dd bs=4 count=16 skip=$((0x001002f0/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 64 -e '8/4 "%08X " "\n"' 
        echo txAggLen
            dd bs=4 count=16 skip=$((0x00100330/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 64 -e '8/4 "%08X " "\n"' 
        echo rxAggregationSize
            dd bs=4 count=16 skip=$((0x00100370/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 64 -e '1/4 "%06d " "\n"' 
    echo pipeLine
        echo '        type=NewPipelineStat_t, bytes=76'
            dd bs=4 count=1 skip=$((0x001003b0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            HSTxStatFifoInt %04x\n"'			
            dd bs=4 count=1 skip=$((0x001003b4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            HSRxStatFifoInt %04x\n"'
            dd bs=4 count=1 skip=$((0x001003b8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            EncTxStatFifoInt %04x\n"'
            dd bs=4 count=1 skip=$((0x001003bc/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            EncRxStatFifoInt %04x\n"'
            dd bs=4 count=1 skip=$((0x001003c0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            RxCompleteStatFifoInt %04x\n"'
            dd bs=4 count=1 skip=$((0x001003c4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            preProcSwi %04x\n"'
            dd bs=4 count=1 skip=$((0x001003c8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            postProcSwi %04x\n"'
            dd bs=4 count=1 skip=$((0x001003cc/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            secFragSwi %04x\n"'
            dd bs=4 count=1 skip=$((0x001003d0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            preToDefragSwi %04x\n"'
            dd bs=4 count=1 skip=$((0x001003d4/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            defragToRxXfrSwi %04x\n"'
            dd bs=4 count=1 skip=$((0x001003d8/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            DecPacketIn %04x\n"'
            dd bs=4 count=1 skip=$((0x001003dc/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            DecPacketInFifoFull %04x\n"'
            dd bs=4 count=1 skip=$((0x001003e0/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            DecPacketOut %04x\n"'
        echo pipelineFifoFull
            dd bs=4 count=5 skip=$((0x001003e4/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 22 -e '1/2 "%d " "\n"' 
	echo diversity
        echo '        type=diversityStatistics_t, bytes=12'
			dd bs=4 count=1 skip=$((0x001003fc/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfPacketsAnt1 %04x\n"'
            dd bs=4 count=1 skip=$((0x00100400/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfPacketsAnt2 %04x\n"'
            dd bs=4 count=1 skip=$((0x00100404/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            totalNumOfToggles %04x\n"'					
    echo thermal
        echo '        type=thermalStatistics_t, bytes=12'
            dd bs=4 count=1 skip=$((0x00100408/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfIrqThrLow %04x\n"'
            dd bs=4 count=1 skip=$((0x0010040a/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfIrqThrHigh %04x\n"'
            dd bs=4 count=1 skip=$((0x0010040c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxStop %04x\n"'
            dd bs=4 count=1 skip=$((0x0010040e/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfTxResume %04x\n"'
            dd bs=4 count=1 skip=$((0x00100410/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfFalseIrq %04x\n"'
			dd bs=4 count=1 skip=$((0x00100412/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfAdcSourceUnexpected %04x\n"'
    echo calibFStArr
        echo '        type=None, bytes=40'
        echo calibFailCount
            dd bs=4 count=9 skip=$((0x00100414/4)) if=$DEV_MEM 2> /dev/null | hexdump -v -n 36 -e '16/2 "%04X " "\n"' 
            dd bs=4 count=1 skip=$((0x00100438/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            calibrationCount %04x\n"'
    echo roam
        echo '        type=RoamingStatistics_t, bytes=4'
            dd bs=4 count=1 skip=$((0x0010043c/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            rssiLevel %04x\n"'
	echo dfs
        echo '        type=DfsStatistics_t, bytes=4'
            dd bs=4 count=1 skip=$((0x00100440/4))  if=$DEV_MEM  2> /dev/null  | hexdump -v -n 4 -e '1/4 "            numOfRadarDetections %04x\n"'
;;
*)
    echo Unknown variable $1
esac
